# Create a new directory and enter it
function md() {
  mkdir -p "$@" && cd "$@"
}

# Test if HTTP compression (RFC 2616 + SDCH) is enabled for a given URL.
# Send a fake UA string for sites that sniff it instead of using the Accept-Encoding header. (Looking at you, ajax.googleapis.com!)
function httpcompression() {
  encoding="$(curl -LIs -H 'User-Agent: Mozilla/5 Gecko' -H 'Accept-Encoding: gzip,deflate,compress,sdch' "$1" | grep '^Content-Encoding:')" && echo "$1 is encoded using ${encoding#* }" || echo "$1 is not using any encoding"
}

function json() {
  python -mjson.tool <<< "$*" | pygmentize -l javascript
}

# All the dig info
function digga() {
  dig +nocmd "$1" any +multiline +noall +answer
}

# based on @jmlacroix's svn-color script
# https://github.com/jmlacroix/svn-color
function svn() {
  local RED="\033[31m"
        MAGENTA="\033[32m"
        GREEN="\033[1;32m"
        BLUE="\033[1;34m"
        GREY="\033[30m"
        YELLOW="\033[1;33m"
        LIGHTPURPLE="\033[1;35m"
        REDBG="\033[41m\033[37m\033[1m"
        GREENBG="\033[43m\033[37m\033[1m"
        RESET="\033[0m\033[0;0m"
  # rebuild args to get quotes right
  CMD=
  for i in "$@"
  do
    if [[ "$i" =~ \  ]]
    then
      CMD="$CMD \"$i\""
    else
      CMD="$CMD $i"
    fi
  done

  # pad with spaces to strip --nocol
  CMD=" $CMD "
  CMDLEN=${#CMD}

  # parse disabling arg
  CMD="${CMD/ --nocol / }"

  # check if disabled
  test "$CMDLEN" = "${#CMD}"
  if [ $? = 1 ] || [ ! -t 1 ]
  then
    eval $(which svn) $CMD
    return
  fi

  # supported svn actions for "status-like" output
  ACTIONS="add|checkout|co|cp|del|export|remove|rm|st"
  ACTIONS="$ACTIONS|merge|mkdir|move|mv|ren|sw|up"

  # actions that outputs "status-like" data
  if [[ "$1" =~ ^($ACTIONS) ]]
  then
    eval $(which svn) $CMD | while IFS= read -r RL
    do
      if   [[ $RL =~ ^\ ?M ]]; then C=$MAGENTA;
      elif [[ $RL =~ ^\ ?C ]]; then C=$REDBG;
      elif [[ $RL =~ ^A ]]; then C=$GREEN;
      elif [[ $RL =~ ^D ]]; then C=$RED;
      elif [[ $RL =~ ^X ]]; then C=$BLUE;
      elif [[ $RL =~ ^U ]]; then C=$BLUE;
      elif [[ $RL =~ ^! ]]; then C=$GREENBG;
      elif [[ $RL =~ ^I ]]; then C=$YELLOW;
      elif [[ $RL =~ ^R ]]; then C=$LIGHTPURPLE;
      elif [[ $RL =~ ^\? ]]; then C=$GREY;
      else C=
      fi

      echo -e "$C${RL/\\/\\\\}$RESET"
    done

  # actions that outputs "diff-like" data
  elif [[ "$1" =~ ^diff ]]
  then
    eval $(which svn) $CMD | while IFS= read -r RL
    do
      if   [[ $RL =~ ^Index:\  ]]; then C=$YELLOW;
      elif [[ $RL =~ ^@@ ]]; then C=$LIGHTPURPLE;

      # removed
      elif [[ $RL =~ ^-\<\<\< ]]; then C=$RED;
      elif [[ $RL =~ ^-\>\>\> ]]; then C=$RED;
      elif [[ $RL =~ ^-=== ]]; then C=$RED;
      elif [[ $RL =~ ^- ]]; then C=$RED

      # added
      elif [[ $RL =~ ^\+\<\<\< ]]; then C=$GREEN;
      elif [[ $RL =~ ^\+\>\>\> ]]; then C=$GREEN;
      elif [[ $RL =~ ^\+=== ]]; then C=$GREEN;
      elif [[ $RL =~ ^\+ ]]; then C=$GREEN;

      else C=
      fi

      echo -e "$C${RL/\\/\\\\}$RESET"
    done
  else
    eval $(which svn) $CMD
  fi
}
